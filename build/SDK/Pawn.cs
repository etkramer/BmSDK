using BmSDK;
using BmSDK.Framework;

namespace BmSDK.Engine;

public class Pawn : Engine.Actor
{
	public enum EPathSearchType : byte
	{
		PST_Default = 0x1,
		PST_Breadth = 0x2,
		PST_NewBestPathTo = 0x4,
		PST_Constraint = 0x8,
	}

	public float MaxStepHeight => (float)GetPropertyValue(0, "UFloatProperty");
	public float MaxJumpHeight => (float)GetPropertyValue(4, "UFloatProperty");
	public float WalkableFloorZ => (float)GetPropertyValue(8, "UFloatProperty");
	public Engine.Controller Controller => (Engine.Controller)GetPropertyValue(12, "UObjectProperty");
	public Engine.Pawn NextPawn => (Engine.Pawn)GetPropertyValue(16, "UObjectProperty");
	public float NetRelevancyTime => (float)GetPropertyValue(20, "UFloatProperty");
	public Engine.PlayerController LastRealViewer => (Engine.PlayerController)GetPropertyValue(24, "UObjectProperty");
	public Engine.Actor LastViewer => (Engine.Actor)GetPropertyValue(28, "UObjectProperty");
	public bool bUpAndOut => GetBoolPropertyValue(32, 1);
	public bool bIsWalking => GetBoolPropertyValue(32, 2);
	public bool bWantsToCrouch => GetBoolPropertyValue(32, 3);
	public bool bIsCrouched => GetBoolPropertyValue(32, 4);
	public bool bTryToUncrouch => GetBoolPropertyValue(32, 5);
	public bool bCanCrouch => GetBoolPropertyValue(32, 6);
	public bool bCrouchCollisionCheck => GetBoolPropertyValue(32, 7);
	public bool bCrawler => GetBoolPropertyValue(32, 8);
	public bool bReducedSpeed => GetBoolPropertyValue(32, 9);
	public bool bJumpCapable => GetBoolPropertyValue(32, 10);
	public bool bCanJump => GetBoolPropertyValue(32, 11);
	public bool bCanWalk => GetBoolPropertyValue(32, 12);
	public bool bCanSwim => GetBoolPropertyValue(32, 13);
	public bool bCanFly => GetBoolPropertyValue(32, 14);
	public bool bCanClimbLadders => GetBoolPropertyValue(32, 15);
	public bool bCanStrafe => GetBoolPropertyValue(32, 16);
	public bool bAvoidLedges => GetBoolPropertyValue(32, 17);
	public bool bStopAtLedges => GetBoolPropertyValue(32, 18);
	public bool bSimulateGravity => GetBoolPropertyValue(32, 19);
	public bool bIgnoreForces => GetBoolPropertyValue(32, 20);
	public bool bCanWalkOffLedges => GetBoolPropertyValue(32, 21);
	public bool bCanBeBaseForPawns => GetBoolPropertyValue(32, 22);
	public bool bSimGravityDisabled => GetBoolPropertyValue(32, 23);
	public bool bDirectHitWall => GetBoolPropertyValue(32, 24);
	public bool bPushesRigidBodies => GetBoolPropertyValue(32, 25);
	public bool bForceFloorCheck => GetBoolPropertyValue(32, 26);
	public bool bForceKeepAnchor => GetBoolPropertyValue(32, 27);
	public bool bRootMotionOverridesFallingXY => GetBoolPropertyValue(32, 28);
	public bool bCanMantle => GetBoolPropertyValue(32, 29);
	public bool bCanClimbUp => GetBoolPropertyValue(32, 30);
	public bool bCanClimbCeilings => GetBoolPropertyValue(32, 31);
	public bool bCanSwatTurn => GetBoolPropertyValue(32, 32);
	public bool bCanLeap => GetBoolPropertyValue(36, 0);
	public bool bCanCoverSlip => GetBoolPropertyValue(36, 1);
	public bool bDisplayPathErrors => GetBoolPropertyValue(36, 2);
	public bool bIsFemale => GetBoolPropertyValue(36, 3);
	public bool bCanPickupInventory => GetBoolPropertyValue(36, 4);
	public bool bAmbientCreature => GetBoolPropertyValue(36, 5);
	public bool bLOSHearing => GetBoolPropertyValue(36, 6);
	public bool bMuffledHearing => GetBoolPropertyValue(36, 7);
	public bool bDontPossess => GetBoolPropertyValue(36, 8);
	public bool bAutoFire => GetBoolPropertyValue(36, 9);
	public bool bRollToDesired => GetBoolPropertyValue(36, 10);
	public bool bStationary => GetBoolPropertyValue(36, 11);
	public bool bCachedRelevant => GetBoolPropertyValue(36, 12);
	public bool bSpecialHUD => GetBoolPropertyValue(36, 13);
	public bool bNoWeaponFiring => GetBoolPropertyValue(36, 14);
	public bool bCanUse => GetBoolPropertyValue(36, 15);
	public bool bModifyReachSpecCost => GetBoolPropertyValue(36, 16);
	public bool bModifyNavPointDest => GetBoolPropertyValue(36, 17);
	public bool bPathfindsAsVehicle => GetBoolPropertyValue(36, 18);
	public bool bIsRoaming => GetBoolPropertyValue(36, 19);
	public bool bForceMaxAnchorChecks => GetBoolPropertyValue(36, 20);
	public bool bRunPhysicsWithNoController => GetBoolPropertyValue(36, 21);
	public bool bForceMaxAccel => GetBoolPropertyValue(36, 22);
	public bool bForceRMVelocity => GetBoolPropertyValue(36, 23);
	public bool bForceRegularVelocity => GetBoolPropertyValue(36, 24);
	public bool bPlayedDeath => GetBoolPropertyValue(36, 25);
	public bool bCanTraverse => GetBoolPropertyValue(36, 26);
	public bool bUseSimplePhysWalking => GetBoolPropertyValue(36, 27);
	public bool bUseComplexStepUpCode => GetBoolPropertyValue(36, 28);
	public bool bIsBatman => GetBoolPropertyValue(36, 29);
	public float UncrouchTime => (float)GetPropertyValue(40, "UFloatProperty");
	public float CrouchHeight => (float)GetPropertyValue(44, "UFloatProperty");
	public float CrouchRadius => (float)GetPropertyValue(48, "UFloatProperty");
	public int FullHeight => (int)GetPropertyValue(52, "UIntProperty");
	public float NonPreferredVehiclePathMultiplier => (float)GetPropertyValue(56, "UFloatProperty");
	public EPathSearchType PathSearchType => (EPathSearchType)GetPropertyValue(60, "UByteProperty");
	public byte RemoteViewPitch => (byte)GetPropertyValue(61, "UByteProperty");
	public byte FlashCount => (byte)GetPropertyValue(62, "UByteProperty");
	public byte FiringMode => (byte)GetPropertyValue(63, "UByteProperty");
	public Engine.PathConstraint PathConstraintList => (Engine.PathConstraint)GetPropertyValue(64, "UObjectProperty");
	public Engine.PathGoalEvaluator PathGoalList => (Engine.PathGoalEvaluator)GetPropertyValue(68, "UObjectProperty");
	public float DesiredSpeed => (float)GetPropertyValue(72, "UFloatProperty");
	public float MaxDesiredSpeed => (float)GetPropertyValue(76, "UFloatProperty");
	public float HearingThreshold => (float)GetPropertyValue(80, "UFloatProperty");
	public float Alertness => (float)GetPropertyValue(84, "UFloatProperty");
	public float SightRadius => (float)GetPropertyValue(88, "UFloatProperty");
	public float PeripheralVision => (float)GetPropertyValue(92, "UFloatProperty");
	public float AvgPhysicsTime => (float)GetPropertyValue(96, "UFloatProperty");
	public float Mass => (float)GetPropertyValue(100, "UFloatProperty");
	public float Buoyancy => (float)GetPropertyValue(104, "UFloatProperty");
	public float MeleeRange => (float)GetPropertyValue(108, "UFloatProperty");
	public Engine.NavigationPoint Anchor => (Engine.NavigationPoint)GetPropertyValue(112, "UObjectProperty");
	public Engine.NavigationPoint LastAnchor => (Engine.NavigationPoint)GetPropertyValue(116, "UObjectProperty");
	public float FindAnchorFailedTime => (float)GetPropertyValue(120, "UFloatProperty");
	public float LastValidAnchorTime => (float)GetPropertyValue(124, "UFloatProperty");
	public float DestinationOffset => (float)GetPropertyValue(128, "UFloatProperty");
	public float NextPathRadius => (float)GetPropertyValue(132, "UFloatProperty");
	public int SerpentineDir => (int)GetPropertyValue(136, "UStructProperty");
	public float SerpentineDist => (float)GetPropertyValue(140, "UFloatProperty");
	public float SerpentineTime => (float)GetPropertyValue(144, "UFloatProperty");
	public float SpawnTime => (float)GetPropertyValue(148, "UFloatProperty");
	public int MaxPitchLimit => (int)GetPropertyValue(152, "UIntProperty");
	public int MaxPathLength => (int)GetPropertyValue(156, "UIntProperty");
	public float GroundSpeed => (float)GetPropertyValue(160, "UFloatProperty");
	public float WaterSpeed => (float)GetPropertyValue(164, "UFloatProperty");
	public float AirSpeed => (float)GetPropertyValue(168, "UFloatProperty");
	public float LadderSpeed => (float)GetPropertyValue(172, "UFloatProperty");
	public float AccelRate => (float)GetPropertyValue(176, "UFloatProperty");
	public float JumpZ => (float)GetPropertyValue(180, "UFloatProperty");
	public float OutofWaterZ => (float)GetPropertyValue(184, "UFloatProperty");
	public float MaxOutOfWaterStepHeight => (float)GetPropertyValue(188, "UFloatProperty");
	public float AirControl => (float)GetPropertyValue(192, "UFloatProperty");
	public float WalkingPct => (float)GetPropertyValue(196, "UFloatProperty");
	public float CrouchedPct => (float)GetPropertyValue(200, "UFloatProperty");
	public float MaxFallSpeed => (float)GetPropertyValue(204, "UFloatProperty");
	public float AIMaxFallSpeedFactor => (float)GetPropertyValue(208, "UFloatProperty");
	public float BaseEyeHeight => (float)GetPropertyValue(212, "UFloatProperty");
	public float EyeHeight => (float)GetPropertyValue(216, "UFloatProperty");
	public int Floor => (int)GetPropertyValue(220, "UStructProperty");
	public float SplashTime => (float)GetPropertyValue(224, "UFloatProperty");
	public float OldZ => (float)GetPropertyValue(228, "UFloatProperty");
	public Engine.PhysicsVolume HeadVolume => (Engine.PhysicsVolume)GetPropertyValue(232, "UObjectProperty");
	public int Health => (int)GetPropertyValue(236, "UIntProperty");
	public int HealthMax => (int)GetPropertyValue(240, "UIntProperty");
	public float BreathTime => (float)GetPropertyValue(244, "UFloatProperty");
	public float UnderWaterTime => (float)GetPropertyValue(248, "UFloatProperty");
	public float LastPainTime => (float)GetPropertyValue(252, "UFloatProperty");
	public int RMVelocity => (int)GetPropertyValue(256, "UStructProperty");
	public int noise1spot => (int)GetPropertyValue(260, "UStructProperty");
	public float noise1time => (float)GetPropertyValue(264, "UFloatProperty");
	public Engine.Pawn noise1other => (Engine.Pawn)GetPropertyValue(268, "UObjectProperty");
	public float noise1loudness => (float)GetPropertyValue(272, "UFloatProperty");
	public int noise2spot => (int)GetPropertyValue(276, "UStructProperty");
	public float noise2time => (float)GetPropertyValue(280, "UFloatProperty");
	public Engine.Pawn noise2other => (Engine.Pawn)GetPropertyValue(284, "UObjectProperty");
	public float noise2loudness => (float)GetPropertyValue(288, "UFloatProperty");
	public float SoundDampening => (float)GetPropertyValue(292, "UFloatProperty");
	public float DamageScaling => (float)GetPropertyValue(296, "UFloatProperty");
	public string MenuName => (string)GetPropertyValue(300, "UStrProperty");
	public Type ControllerClass => (Type)GetPropertyValue(304, "UClassProperty");
	public Engine.PlayerReplicationInfo PlayerReplicationInfo => (Engine.PlayerReplicationInfo)GetPropertyValue(308, "UObjectProperty");
	public Engine.LadderVolume OnLadder => (Engine.LadderVolume)GetPropertyValue(312, "UObjectProperty");
	public string LandMovementState => (string)GetPropertyValue(316, "UNameProperty");
	public string WaterMovementState => (string)GetPropertyValue(320, "UNameProperty");
	public Engine.PlayerStart LastStartSpot => (Engine.PlayerStart)GetPropertyValue(324, "UObjectProperty");
	public float LastStartTime => (float)GetPropertyValue(328, "UFloatProperty");
	public int TakeHitLocation => (int)GetPropertyValue(332, "UStructProperty");
	public Type HitDamageType => (Type)GetPropertyValue(336, "UClassProperty");
	public int TearOffMomentum => (int)GetPropertyValue(340, "UStructProperty");
	public Engine.SkeletalMeshComponent Mesh => (Engine.SkeletalMeshComponent)GetPropertyValue(344, "UComponentProperty");
	public Engine.CylinderComponent CylinderComponent => (Engine.CylinderComponent)GetPropertyValue(348, "UComponentProperty");
	public float RBPushRadius => (float)GetPropertyValue(352, "UFloatProperty");
	public float RBPushStrength => (float)GetPropertyValue(356, "UFloatProperty");
	public Engine.Vehicle DrivenVehicle => (Engine.Vehicle)GetPropertyValue(360, "UObjectProperty");
	public float AlwaysRelevantDistanceSquared => (float)GetPropertyValue(364, "UFloatProperty");
	public float VehicleCheckRadius => (float)GetPropertyValue(368, "UFloatProperty");
	public Engine.Controller LastHitBy => (Engine.Controller)GetPropertyValue(372, "UObjectProperty");
	public float ViewPitchMin => (float)GetPropertyValue(376, "UFloatProperty");
	public float ViewPitchMax => (float)GetPropertyValue(380, "UFloatProperty");
	public int AllowedYawError => (int)GetPropertyValue(384, "UIntProperty");
	public Type InventoryManagerClass => (Type)GetPropertyValue(388, "UClassProperty");
	public Engine.InventoryManager InvManager => (Engine.InventoryManager)GetPropertyValue(392, "UObjectProperty");
	public Engine.Weapon Weapon => (Engine.Weapon)GetPropertyValue(396, "UObjectProperty");
	public int FlashLocation => (int)GetPropertyValue(400, "UStructProperty");
	public int LastFiringFlashLocation => (int)GetPropertyValue(404, "UStructProperty");
	public int ShotCount => (int)GetPropertyValue(408, "UIntProperty");
	public Engine.PrimitiveComponent PreRagdollCollisionComponent => (Engine.PrimitiveComponent)GetPropertyValue(412, "UComponentProperty");
	public Engine.RB_BodyInstance PhysicsPushBody => (Engine.RB_BodyInstance)GetPropertyValue(416, "UObjectProperty");
	public int FailedLandingCount => (int)GetPropertyValue(420, "UIntProperty");
	public int walkFailPoint => (int)GetPropertyValue(424, "UStructProperty");
	public Engine.Actor LinkedCullPawn => (Engine.Actor)GetPropertyValue(428, "UObjectProperty");
}
